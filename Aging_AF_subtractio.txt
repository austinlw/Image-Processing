list = getList("image.titles")
dir = getDirectory("image");

for (i = 0; i < list.length; i++){
	imagename = list[i];

	worms = substring(imagename, lastIndexOf(imagename, "_")+1);
	imagename = substring(imagename, 0, lastIndexOf(imagename, "_"));
	test = substring(imagename, lastIndexOf(imagename, "_")+1);
	imagename = substring(imagename, 0, lastIndexOf(imagename, "_"));
	strain = substring(imagename, lastIndexOf(imagename, "_")+1);
	num = parseInt(substring(strain,4,6));
	
	//assign tissue type, based on last two RT numbers
	if (num<61)
		tissue = "Intestine";
	else if (num>60 && num<63)
		tissue = "Neuron";
	else
		tissue = "Muscle";
	path = dir+tissue+"/";

	//makes tissue folder and strain subfolder
	if (!File.exists(path))
		File.makeDirectory(path);	
	path = path+strain+"/";
	if (!File.exists(path))
		File.makeDirectory(path);	

	imagename = list[i];
	
	//create mTFP background subtracted images
	selectWindow(imagename);
	run("Duplicate...", "title=mTFP duplicate channels=1");

	//create mCherry, AF, and mask
	selectWindow(imagename);
	run("Duplicate...", "title=mCherry duplicate channels=5");
	run("Duplicate...", "title=Mask duplicate");
	run("Convert to Mask", "method=Default background=Dark calculate");
	run("Gaussian Blur...", "sigma=1 stack");
	run("Smooth", "stack");
	selectWindow(imagename);
	run("Duplicate...", "title=AFMask duplicate channels=2");
	run("Convert to Mask", "method=Default background=Dark calculate");
	run("Gaussian Blur...", "sigma=1 stack");
	run("Smooth", "stack");
	imageCalculator("Subtract", "Mask","AFMask");
	run("Find Edges", "stack");

	//create old mTFP and old mCherry
	selectWindow(imagename);
	run("Duplicate...", "title=mTFPold duplicate channels=3");
	selectWindow(imagename);
	run("Duplicate...", "title=mCherryold duplicate channels=6");
	
	//run calculations for mCherry and mTFP
	selectWindow("Mask");
	run("Set Measurements...", "area mean standard min area_fraction redirect=mCherry decimal=3");
	run("Analyze Particles...", "display clear include stack"); //mCherry
	saveAs("Results", path+"mCherry2"+"_"+test+".csv");
	run("Set Measurements...", "area mean standard min area_fraction redirect=mTFP decimal=3");
	run("Analyze Particles...", "display clear include stack"); //mTFP
	saveAs("Results", path+"mTFP2"+"_"+test+".csv");
	run("Set Measurements...", "area mean standard min area_fraction redirect=mTFPold decimal=3");
	run("Analyze Particles...", "display clear include stack"); //mTFPold
	saveAs("Results", path+"mTFPold2"+"_"+test+".csv");
	run("Set Measurements...", "area mean standard min area_fraction redirect=mCherryold decimal=3");
	run("Analyze Particles...", "display clear include stack"); //mCherryold
	saveAs("Results", path+"mCherryold2"+"_"+test+".csv");

	//close windows
	//close("Mask");
	close("mCherry");
	close("mTFP");
	close("mTFPold");
	close("mCherryold");

	//measure AF
	selectWindow(imagename);
	run("Duplicate...", "title=AF duplicate channels=2");
	selectWindow("AFMask")
	run("Set Measurements...", "area mean standard min area_fraction redirect=AF decimal=3");
	run("Analyze Particles...", "display clear include stack"); //AF
	saveAs("Results", path+"AF.csv");

	//close("AF");
	close("AFMask");
	close(list[i]);
}